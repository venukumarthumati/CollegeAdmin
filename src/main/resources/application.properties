server.port=9091
service.domain.url=*
spring.datasource.url=jdbc:postgresql://localhost:5432/student_management
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

server.error.path=/app/error
server.compression.enabled=true
server.use-forward-headers=true
server.servlet.context-path=/college-admin
server.error.whitelabel.enabled=false
server.compression.min-response-size=1024
server.tomcat.protocol-header=x-forwarded-proto
server.compression.mime-types=image/gif,image/png,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/octet-stream

server.error.include-stacktrace=NEVER

#Multipart configurations
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
# Initially, the files will be temporarly written in the jvm memory uptil 1000 bytes mentioned below.After which files are written to disk.
spring.servlet.multipart.file-size-threshold=1000B
# Whether to resolve the multipart request lazily at the time of file or parameter access.
spring.servlet.multipart.resolve-lazily=false

#Banner configurations
spring.banner.charset=UTF-8
spring.banner.location=classpath:banner.txt

api.version=v1
url.context.college-admin.service=http://localhost:9091/college-admin/api/

#view resolver properties
spring.mvc.view.prefix=/templates/jsp/
spring.mvc.view.suffix=.jsp
